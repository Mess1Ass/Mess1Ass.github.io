{"title":"Flask项目服务器部署","uid":"f2cb4d90a926fecafd5804ed8b8967f5","slug":"flaskDeploy","date":"2025-07-10T14:31:23.000Z","updated":"2025-07-28T02:27:19.087Z","comments":true,"path":"api/articles/flaskDeploy.json","keywords":null,"cover":"./images/resume_icon.jpg","content":"<h1 id=\"🚀-Flask-项目部署教程（使用-Gunicorn-Nginx-HTTPS）\"><a href=\"#🚀-Flask-项目部署教程（使用-Gunicorn-Nginx-HTTPS）\" class=\"headerlink\" title=\"🚀 Flask 项目部署教程（使用 Gunicorn + Nginx + HTTPS）\"></a>🚀 Flask 项目部署教程（使用 Gunicorn + Nginx + HTTPS）</h1><p>本教程介绍如何在 Ubuntu 服务器上使用 Gunicorn + Nginx 部署 Flask 后端，并实现自定义域名绑定、HTTPS 自动签发及前端 Vercel 发布。</p>\n<h1 id=\"🧱-项目结构概览\"><a href=\"#🧱-项目结构概览\" class=\"headerlink\" title=\"🧱 项目结构概览\"></a>🧱 项目结构概览</h1><p>toolBackend&#x2F;           # Flask 后端项目<br>toolFrontend&#x2F;          # React 前端项目（已托管 GitHub）</p>\n<h2 id=\"✅-前提条件\"><a href=\"#✅-前提条件\" class=\"headerlink\" title=\"✅ 前提条件\"></a>✅ 前提条件</h2><p>一台 Ubuntu 服务器（推荐 20.04+）</p>\n<p>已安装 Python3、pip、git</p>\n<p>已绑定域名（如：48api.tool4me.cn）</p>\n<p>已解析 A 记录至服务器公网 IP</p>\n<h2 id=\"📦-1-安装依赖\"><a href=\"#📦-1-安装依赖\" class=\"headerlink\" title=\"📦 1. 安装依赖\"></a>📦 1. 安装依赖</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> apt update</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> apt install nginx certbot python3-certbot-nginx</span><br></pre></td></tr></table></figure>\n<p>推荐使用虚拟环境管理依赖：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 -m venv venv</span><br><span class=\"line\"><span class=\"built_in\">source</span> venv/bin/activate</span><br><span class=\"line\">pip install -r requirements.txt</span><br></pre></td></tr></table></figure>\n<h2 id=\"⚙️-2-使用-Gunicorn-启动-Flask-项目\"><a href=\"#⚙️-2-使用-Gunicorn-启动-Flask-项目\" class=\"headerlink\" title=\"⚙️ 2. 使用 Gunicorn 启动 Flask 项目\"></a>⚙️ 2. 使用 Gunicorn 启动 Flask 项目</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gunicorn app:app --<span class=\"built_in\">bind</span> 127.0.0.1:5000 --workers 4 --daemon</span><br><span class=\"line\">app:app 表示：app.py 中的 app 实例</span><br></pre></td></tr></table></figure>\n\n<p>可将其写入 systemd 服务实现守护进程管理（可选）</p>\n<h2 id=\"🌐-3-配置-Nginx-反向代理\"><a href=\"#🌐-3-配置-Nginx-反向代理\" class=\"headerlink\" title=\"🌐 3. 配置 Nginx 反向代理\"></a>🌐 3. 配置 Nginx 反向代理</h2><p>编辑配置文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> nano /etc/nginx/sites-available/your.domain.com</span><br></pre></td></tr></table></figure>\n<p>内容示例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name your.domain.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        proxy_pass http://127.0.0.1:5000;</span><br><span class=\"line\">        proxy_set_header Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">        proxy_set_header X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>创建软链接启用：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">ln</span> -s /etc/nginx/sites-available/your.domain.com /etc/nginx/sites-enabled/</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> nginx -t</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl reload nginx</span><br></pre></td></tr></table></figure>\n<h2 id=\"🔒-4-配置-HTTPS（Let’s-Encrypt）\"><a href=\"#🔒-4-配置-HTTPS（Let’s-Encrypt）\" class=\"headerlink\" title=\"🔒 4. 配置 HTTPS（Let’s Encrypt）\"></a>🔒 4. 配置 HTTPS（Let’s Encrypt）</h2><p>使用 certbot 自动签发证书：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> certbot --nginx -d your.domain.com</span><br></pre></td></tr></table></figure>\n<p>证书自动续期设置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl status certbot.timer  <span class=\"comment\"># 默认已启用自动续期</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"🌍-5-前端部署到-Vercel\"><a href=\"#🌍-5-前端部署到-Vercel\" class=\"headerlink\" title=\"🌍 5. 前端部署到 Vercel\"></a>🌍 5. 前端部署到 Vercel</h2><p>登录 vercel.com</p>\n<p>绑定你的 GitHub 仓库（如：toolFrontend）</p>\n<p>设置环境变量（如：API_URL 指向你的后端）</p>\n<p>自动部署成功后绑定自定义域名（如：tool4me.cn）</p>\n<h2 id=\"🛡️-6-安全优化建议（可选）\"><a href=\"#🛡️-6-安全优化建议（可选）\" class=\"headerlink\" title=\"🛡️ 6. 安全优化建议（可选）\"></a>🛡️ 6. 安全优化建议（可选）</h2><p>配置 fail2ban 防爆破</p>\n<p>使用 ufw 开启防火墙，仅开放 80 和 443 端口</p>\n<p>定期备份 MongoDB 数据和日志文件</p>\n<h2 id=\"🎯-效果验证\"><a href=\"#🎯-效果验证\" class=\"headerlink\" title=\"🎯 效果验证\"></a>🎯 效果验证</h2><p>后端 API 可通过 <a href=\"https://your.domain.com/api/xxx\">https://your.domain.com/api/xxx</a> 访问</p>\n<p>前端网页可通过 <a href=\"https://domain.com/\">https://domain.com</a> 访问</p>\n<p>数据传输加密、全球 CDN 加速生效</p>\n<h2 id=\"👨‍💻-技术栈回顾\"><a href=\"#👨‍💻-技术栈回顾\" class=\"headerlink\" title=\"👨‍💻 技术栈回顾\"></a>👨‍💻 技术栈回顾</h2><p>模块\t技术栈<br>后端\tFlask + Gunicorn + MongoDB<br>前端\tReact + Semi Design + Vercel<br>部署\tNginx + certbot + systemd<br>域名 &amp; 安全\tDNSPod + Let’s Encrypt</p>\n","feature":true,"text":"服务器部署...","permalink":"/post/flaskDeploy","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"服务器部署","slug":"服务器部署","count":1,"path":"api/tags/服务器部署.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%F0%9F%9A%80-Flask-%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B%EF%BC%88%E4%BD%BF%E7%94%A8-Gunicorn-Nginx-HTTPS%EF%BC%89\"><span class=\"toc-text\">🚀 Flask 项目部署教程（使用 Gunicorn + Nginx + HTTPS）</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%F0%9F%A7%B1-%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E6%A6%82%E8%A7%88\"><span class=\"toc-text\">🧱 项目结构概览</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%9C%85-%E5%89%8D%E6%8F%90%E6%9D%A1%E4%BB%B6\"><span class=\"toc-text\">✅ 前提条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%F0%9F%93%A6-1-%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">📦 1. 安装依赖</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%9A%99%EF%B8%8F-2-%E4%BD%BF%E7%94%A8-Gunicorn-%E5%90%AF%E5%8A%A8-Flask-%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">⚙️ 2. 使用 Gunicorn 启动 Flask 项目</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%F0%9F%8C%90-3-%E9%85%8D%E7%BD%AE-Nginx-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86\"><span class=\"toc-text\">🌐 3. 配置 Nginx 反向代理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%F0%9F%94%92-4-%E9%85%8D%E7%BD%AE-HTTPS%EF%BC%88Let%E2%80%99s-Encrypt%EF%BC%89\"><span class=\"toc-text\">🔒 4. 配置 HTTPS（Let’s Encrypt）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%F0%9F%8C%8D-5-%E5%89%8D%E7%AB%AF%E9%83%A8%E7%BD%B2%E5%88%B0-Vercel\"><span class=\"toc-text\">🌍 5. 前端部署到 Vercel</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%F0%9F%9B%A1%EF%B8%8F-6-%E5%AE%89%E5%85%A8%E4%BC%98%E5%8C%96%E5%BB%BA%E8%AE%AE%EF%BC%88%E5%8F%AF%E9%80%89%EF%BC%89\"><span class=\"toc-text\">🛡️ 6. 安全优化建议（可选）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%F0%9F%8E%AF-%E6%95%88%E6%9E%9C%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">🎯 效果验证</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%F0%9F%91%A8%E2%80%8D%F0%9F%92%BB-%E6%8A%80%E6%9C%AF%E6%A0%88%E5%9B%9E%E9%A1%BE\"><span class=\"toc-text\">👨‍💻 技术栈回顾</span></a></li></ol></li></ol>","author":{"name":"Mess1A","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/187351171?s=400&u=9c476f29a83e3e29437a4a4b05a8f9e119a6a631&v=4","link":"/","description":"只要想念 <br /> 就会相见","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"在服务器上搭建视频文件分发服务","uid":"10be6ba17a189071ff3c4ecf77a6208e","slug":"vedioStorage","date":"2025-07-10T14:31:23.000Z","updated":"2025-07-28T02:27:19.088Z","comments":true,"path":"api/articles/vedioStorage.json","keywords":null,"cover":"./images/resume_icon.jpg","text":"服务搭建...","permalink":"/post/vedioStorage","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"服务搭建","slug":"服务搭建","count":1,"path":"api/tags/服务搭建.json"},{"name":"ftp","slug":"ftp","count":1,"path":"api/tags/ftp.json"}],"author":{"name":"Mess1A","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/187351171?s=400&u=9c476f29a83e3e29437a4a4b05a8f9e119a6a631&v=4","link":"/","description":"只要想念 <br /> 就会相见","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"丝芭商城切票","uid":"c86bd12937c2148f53e2425d8c90df48","slug":"ticketPlayWright","date":"2025-06-10T16:00:00.000Z","updated":"2025-07-28T02:27:19.088Z","comments":true,"path":"api/articles/ticketPlayWright.json","keywords":null,"cover":"./images/ticketPlayWright.jpg","text":"切票...","permalink":"/post/ticketPlayWright","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"python","slug":"python","count":2,"path":"api/tags/python.json"},{"name":"爬虫","slug":"爬虫","count":2,"path":"api/tags/爬虫.json"},{"name":"playwright","slug":"playwright","count":1,"path":"api/tags/playwright.json"}],"author":{"name":"Mess1A","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/187351171?s=400&u=9c476f29a83e3e29437a4a4b05a8f9e119a6a631&v=4","link":"/","description":"只要想念 <br /> 就会相见","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}