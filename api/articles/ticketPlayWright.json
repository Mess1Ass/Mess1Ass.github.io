{"title":"丝芭商城切票","uid":"c86bd12937c2148f53e2425d8c90df48","slug":"ticketPlayWright","date":"2025-06-10T16:00:00.000Z","updated":"2025-07-28T02:27:19.088Z","comments":true,"path":"api/articles/ticketPlayWright.json","keywords":null,"cover":"./images/ticketPlayWright.jpg","content":"<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">WARNING</p>\n<p>本系统仅适用于丝芭商城，未测试，不保证可行性，重点介绍playwright。<br>本系统爬虫仅用于学习交流，请勿用于非法用途。</p>\n</div>\n<h1 id=\"丝芭商城门票抢购\"><a href=\"#丝芭商城门票抢购\" class=\"headerlink\" title=\"丝芭商城门票抢购\"></a>丝芭商城门票抢购</h1><h2 id=\"项目简介\"><a href=\"#项目简介\" class=\"headerlink\" title=\"项目简介\"></a>项目简介</h2><p>本项目旨在使用playwright技术 <strong>自动化购买丝芭公演门票</strong> 。  </p>\n<h2 id=\"功能介绍\"><a href=\"#功能介绍\" class=\"headerlink\" title=\"功能介绍\"></a>功能介绍</h2><ul>\n<li><strong>自动购买门票</strong>：调用购买api接口，实现自动化购买。  </li>\n<li><strong>playwright 支持</strong>：相比于selenium，playwright 更加适合自动化测试，速度更快，更稳定。  </li>\n<li><strong>多线程优化</strong>：提升请求效率，减少等待时间。  </li>\n<li><strong>防反爬策略</strong>：加入请求间隔控制，降低被封风险。</li>\n</ul>\n<h2 id=\"代码主要实现部分\"><a href=\"#代码主要实现部分\" class=\"headerlink\" title=\"代码主要实现部分\"></a>代码主要实现部分</h2><h3 id=\"🎯-1-playwright安装\"><a href=\"#🎯-1-playwright安装\" class=\"headerlink\" title=\"🎯 1.playwright安装\"></a>🎯 <strong>1.playwright安装</strong></h3><h5 id=\"📜-代码实现\"><a href=\"#📜-代码实现\" class=\"headerlink\" title=\"📜 代码实现\"></a>📜 <strong>代码实现</strong></h5><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装playwright</span><br><span class=\"line\">pip install playwright</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装playwright所需的浏览器插件</span><br><span class=\"line\">playwright install</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"🎯-2-playwright启动浏览器\"><a href=\"#🎯-2-playwright启动浏览器\" class=\"headerlink\" title=\"🎯 2.playwright启动浏览器\"></a>🎯 <strong>2.playwright启动浏览器</strong></h3><h5 id=\"📜-代码实现-1\"><a href=\"#📜-代码实现-1\" class=\"headerlink\" title=\"📜 代码实现\"></a>📜 <strong>代码实现</strong></h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">with</span> async_playwright() <span class=\"keyword\">as</span> p:</span><br><span class=\"line\">    <span class=\"comment\"># 以无头模式运行 可更换启动的浏览器</span></span><br><span class=\"line\">    browser = <span class=\"keyword\">await</span> p.chromium.launch(executable_path=<span class=\"string\">&quot;.\\ms-playwright\\chromium-1169\\chrome-win\\chrome.exe&quot;</span>, headless=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    context = <span class=\"keyword\">await</span> browser.new_context()</span><br><span class=\"line\">    page = <span class=\"keyword\">await</span> context.new_page()</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"comment\"># ✅ 用于 API 请求的独立 context</span></span><br><span class=\"line\">        api_context = <span class=\"keyword\">await</span> p.request.new_context()</span><br><span class=\"line\">        <span class=\"comment\">###  页面操作代码</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">###  页面操作代码</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">await</span> asyncio.sleep(<span class=\"number\">60</span>)  <span class=\"comment\"># 保持页面一段时间，便于观察</span></span><br><span class=\"line\">        <span class=\"keyword\">await</span> browser.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;异常或浏览器关闭:&quot;</span>, e)</span><br><span class=\"line\">    <span class=\"keyword\">finally</span>:</span><br><span class=\"line\">        <span class=\"keyword\">await</span> browser.close()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"🎯-3-playwright调用购票接口\"><a href=\"#🎯-3-playwright调用购票接口\" class=\"headerlink\" title=\"🎯 3.playwright调用购票接口\"></a>🎯 <strong>3.playwright调用购票接口</strong></h3><h4 id=\"📌-函数：make-request-with-retries\"><a href=\"#📌-函数：make-request-with-retries\" class=\"headerlink\" title=\"📌 函数：make_request_with_retries\"></a>📌 <strong>函数：<code>make_request_with_retries</code></strong></h4><p>此函数用于调用购票api，直到成功&#x2F;没有库存，并将返回的信息保存成日志，并返回日志信息。  </p>\n<h5 id=\"📌-函数参数\"><a href=\"#📌-函数参数\" class=\"headerlink\" title=\"📌 函数参数\"></a>📌 <strong>函数参数</strong></h5><ul>\n<li><code>context: APIRequestContext</code>：必须为APIRequestContext类型，其他类型没有get&#x2F;post方法。  </li>\n<li><code>ticket_Add_url</code>：购票url。  </li>\n<li><code>ticket_Add_params</code>：接口传参。  </li>\n<li><code>ticket_Add_headers</code>：请求头。</li>\n</ul>\n<h5 id=\"📜-代码实现-2\"><a href=\"#📜-代码实现-2\" class=\"headerlink\" title=\"📜 代码实现\"></a>📜 <strong>代码实现</strong></h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">with</span> async_playwright(context: APIRequestContext, ticket_Add_url, ticket_Add_params, ticket_Add_headers) <span class=\"keyword\">as</span> p:</span><br><span class=\"line\">    retries = <span class=\"number\">0</span></span><br><span class=\"line\">    backoff = <span class=\"number\">0.2</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> retries &lt; max_retries:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            response = <span class=\"keyword\">await</span> context.post(ticket_Add_url, params=ticket_Add_params, headers=ticket_Add_headers)</span><br><span class=\"line\">            current_time = datetime.now()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> response.ok:</span><br><span class=\"line\">                data = <span class=\"keyword\">await</span> response.json()</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"string\">&#x27;success&#x27;</span> <span class=\"keyword\">in</span> data.get(<span class=\"string\">&quot;Message&quot;</span>, <span class=\"string\">&quot;&quot;</span>):</span><br><span class=\"line\">                    log_entry = <span class=\"string\">f&quot;数据=<span class=\"subst\">&#123;data&#125;</span>&quot;</span></span><br><span class=\"line\">                    log_data.append(log_entry)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> log_data</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    log_entry = <span class=\"string\">f&quot;数据=<span class=\"subst\">&#123;data&#125;</span>&quot;</span></span><br><span class=\"line\">                    log_data.append(log_entry)</span><br><span class=\"line\">                    retries += <span class=\"number\">1</span></span><br><span class=\"line\">                    delay = backoff * (<span class=\"number\">2</span> ** retries) + random.random()*<span class=\"number\">0.1</span></span><br><span class=\"line\">                    <span class=\"keyword\">await</span> asyncio.sleep(delay)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                error_entry = <span class=\"string\">f&quot;状态码: <span class=\"subst\">&#123;response.status&#125;</span>&quot;</span></span><br><span class=\"line\">                log_data.append(error_entry)</span><br><span class=\"line\">                retries += <span class=\"number\">1</span></span><br><span class=\"line\">                delay = backoff * (<span class=\"number\">2</span> ** retries) + random.random()*<span class=\"number\">0.1</span></span><br><span class=\"line\">                <span class=\"keyword\">await</span> asyncio.sleep(delay)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">            error_entry = <span class=\"string\">f&quot;<span class=\"subst\">&#123;e&#125;</span>&quot;</span></span><br><span class=\"line\">            log_data.append(error_entry)</span><br><span class=\"line\">            retries += <span class=\"number\">1</span></span><br><span class=\"line\">            delay = backoff * (<span class=\"number\">2</span> ** retries) + random.random()*<span class=\"number\">0.1</span></span><br><span class=\"line\">            <span class=\"keyword\">await</span> asyncio.sleep(delay)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> log_data</span><br></pre></td></tr></table></figure>","feature":true,"text":"切票...","permalink":"/post/ticketPlayWright","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"python","slug":"python","count":2,"path":"api/tags/python.json"},{"name":"爬虫","slug":"爬虫","count":2,"path":"api/tags/爬虫.json"},{"name":"playwright","slug":"playwright","count":1,"path":"api/tags/playwright.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%9D%E8%8A%AD%E5%95%86%E5%9F%8E%E9%97%A8%E7%A5%A8%E6%8A%A2%E8%B4%AD\"><span class=\"toc-text\">丝芭商城门票抢购</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">项目简介</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">功能介绍</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E4%B8%BB%E8%A6%81%E5%AE%9E%E7%8E%B0%E9%83%A8%E5%88%86\"><span class=\"toc-text\">代码主要实现部分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%F0%9F%8E%AF-1-playwright%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">🎯 1.playwright安装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%F0%9F%93%9C-%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">📜 代码实现</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%F0%9F%8E%AF-2-playwright%E5%90%AF%E5%8A%A8%E6%B5%8F%E8%A7%88%E5%99%A8\"><span class=\"toc-text\">🎯 2.playwright启动浏览器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%F0%9F%93%9C-%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0-1\"><span class=\"toc-text\">📜 代码实现</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%F0%9F%8E%AF-3-playwright%E8%B0%83%E7%94%A8%E8%B4%AD%E7%A5%A8%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">🎯 3.playwright调用购票接口</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%F0%9F%93%8C-%E5%87%BD%E6%95%B0%EF%BC%9Amake-request-with-retries\"><span class=\"toc-text\">📌 函数：make_request_with_retries</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%F0%9F%93%8C-%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">📌 函数参数</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%F0%9F%93%9C-%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0-2\"><span class=\"toc-text\">📜 代码实现</span></a></li></ol></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Mess1A","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/187351171?s=400&u=9c476f29a83e3e29437a4a4b05a8f9e119a6a631&v=4","link":"/","description":"只要想念 <br /> 就会相见","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Flask项目服务器部署","uid":"f2cb4d90a926fecafd5804ed8b8967f5","slug":"flaskDeploy","date":"2025-07-10T14:31:23.000Z","updated":"2025-07-28T02:27:19.087Z","comments":true,"path":"api/articles/flaskDeploy.json","keywords":null,"cover":"./images/resume_icon.jpg","text":"服务器部署...","permalink":"/post/flaskDeploy","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"服务器部署","slug":"服务器部署","count":1,"path":"api/tags/服务器部署.json"}],"author":{"name":"Mess1A","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/187351171?s=400&u=9c476f29a83e3e29437a4a4b05a8f9e119a6a631&v=4","link":"/","description":"只要想念 <br /> 就会相见","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"丝芭商城竞价数据统计","uid":"f3519b3c4b337b4d2b1c684904d9f509","slug":"pythonProgram","date":"2025-03-10T14:31:23.000Z","updated":"2025-07-28T02:27:19.087Z","comments":true,"path":"api/articles/pythonProgram.json","keywords":null,"cover":"./images/resume_icon.jpg","text":"收集丝芭特殊场竞价公演以及竞价拍立得数据...","permalink":"/post/pythonProgram","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"python","slug":"python","count":2,"path":"api/tags/python.json"},{"name":"爬虫","slug":"爬虫","count":2,"path":"api/tags/爬虫.json"}],"author":{"name":"Mess1A","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/187351171?s=400&u=9c476f29a83e3e29437a4a4b05a8f9e119a6a631&v=4","link":"/","description":"只要想念 <br /> 就会相见","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}